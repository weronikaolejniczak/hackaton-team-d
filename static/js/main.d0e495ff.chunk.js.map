{"version":3,"sources":["components/Board/Board.js","components/Block/Block.js","components/Tetromino/Shape/ShapeI.js","components/Tetromino/Shape/ShapeJ.js","components/Tetromino/Shape/ShapeL.js","components/Tetromino/Shape/ShapeO.js","components/Tetromino/Shape/ShapeS.js","components/Tetromino/Shape/ShapeT.js","components/Tetromino/Shape/ShapeZ.js","components/Tetromino/Tetromino.js","App.js","index.js"],"names":["Board","num","useState","currentShapeX","setCurrentShapeX","currentShapeY","setCurrentShapeY","currentShape","createRef","setTimeout","handleMovement","event","key","console","log","prevState","Math","max","min","useEffect","document","addEventListener","className","ref","x","y","Block","color","style","backgroundColor","ShapeI","ShapeJ","ShapeL","ShapeO","ShapeS","ShapeZ","shapeArray","ShapeT","Tetromino","props","position","top","left","forwardRef","App","tetrominoNum","floor","random","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0e495ff.chunk.js","sourcesContent":["import React, { useState, useEffect, createRef } from 'react';\n\nimport { Tetromino } from 'components';\nimport './Board.css';\n\nfunction Board({ num }) {\n    const [currentShapeX, setCurrentShapeX] = useState(275);\n    const [currentShapeY, setCurrentShapeY] = useState(0);\n    const currentShape = createRef();\n\n    const handleGravity = () => {\n        currentShapeY < 500 && setCurrentShapeY(currentShapeY + 25);\n    };\n\n    setTimeout(() => handleGravity(), 1000);\n\n    const handleMovement = (event) => {\n        if (event.key === 'ArrowDown') {\n            console.log('Clicked ArrowDown! Should fall to the bottom.');\n        } else if (event.key === 'ArrowLeft') {\n            // has to be changed to dimensions dependant on each shape\n            setCurrentShapeX(prevState => Math.max(prevState - 25, 0));\n        } else if (event.key === 'ArrowRight') {\n            // has to be changed to dimensions dependant on each shape\n            setCurrentShapeX(prevState => Math.min(prevState + 25, 575));\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleMovement);\n    }, []);\n\n    return (\n        <div className=\"Board\">\n            <Tetromino num={num} ref={currentShape} x={currentShapeX} y={currentShapeY} />\n        </div>\n    );\n}\n\nexport default Board;\n","import React from 'react';\n\nimport './Block.css';\n\nfunction Block({ color }) {\n  return <div className='Block' style={{ backgroundColor: color }} />;\n}\n\nexport default Block;\n","import React from 'react';\n\nimport Block from 'components/Block';\n\nfunction ShapeI() {\n  const color = \"red\";\n\n  return (\n    <>\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n    </>\n  );\n}\n\nexport default ShapeI;\n","import React from 'react';\n\nimport Block from 'components/Block';\n\nfunction ShapeJ() {\n  const color = \"green\";\n\n  return (\n    <>\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n    </>\n  );\n}\n\nexport default ShapeJ;\n","import React from 'react';\n\nimport Block from 'components/Block';\n\nfunction ShapeL() {\n    const color = \"blue\";\n\n    return (\n      <>\n        <Block color={color} />\n        <Block color={color} />\n        <Block color={color} />\n        <Block color={color} />\n      </>\n    );\n}\n\nexport default ShapeL;\n","import React from 'react';\n\nimport Block from 'components/Block';\n\nfunction ShapeO() {\n  const color = \"purple\";\n\n  return (\n    <>\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n    </>\n  );\n}\n\nexport default ShapeO;\n","import React from 'react';\n\nimport Block from 'components/Block';\n\nfunction ShapeS() {\n  const color = \"pink\";\n\n  return (\n    <>\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n    </>\n  );\n}\n\nexport default ShapeS;\n","import React from 'react';\n\nimport Block from 'components/Block';\n\nfunction ShapeL() {\n  const color = \"magenta\";\n\n  return (\n    <>\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n    </>\n  );\n}\n\nexport default ShapeL;\n","import React from 'react';\n\nimport Block from 'components/Block';\n\nfunction ShapeZ() {\n  const color = \"yellow\";\n\n  return (\n    <>\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n      <Block color={color} />\n    </>\n  );\n}\n\nexport default ShapeZ;\n","import React, { forwardRef } from 'react';\n\nimport {\n  ShapeI,\n  ShapeJ,\n  ShapeL,\n  ShapeO,\n  ShapeS,\n  ShapeT,\n  ShapeZ,\n} from './Shape';\nimport './Tetromino.css';\n\nconst shapeArray = [\n  <ShapeI />,\n  <ShapeJ />,\n  <ShapeL />,\n  <ShapeO />,\n  <ShapeS />,\n  <ShapeT />,\n  <ShapeZ />,\n];\n\nfunction Tetromino(props, ref) {\n  const { x, y, num } = props;\n\n  const position = {\n    top: y,\n    left: x,\n  };\n\n  return (\n    <div className='Tetromino' ref={ref} style={position}>\n      {shapeArray[num]}\n    </div>\n  );\n}\n\nexport default forwardRef(Tetromino);\n","import { Board } from 'components';\nimport './App.css';\n\nfunction App() {\n  const tetrominoNum = Math.floor(Math.random() * 7);\n\n  return (\n    <div className='App'>\n      <Board num={tetrominoNum} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}